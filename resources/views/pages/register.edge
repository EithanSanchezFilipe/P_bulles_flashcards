@component('components/layout', {title: 'Créer un compte'})
  <h3>
    Créer un compte
  </h3>
  <form action="{{ route('auth.handleRegister') }}" method="POST" id="registerForm">
    {{ csrfField() }}
    @!component('components/input', {name : 'username', label : 'Nom d\'utilisateur', value: old('username')})
    @!component('components/input', {name: 'email', label: 'Email', value: old('email')})
    @!component('components/input', {name : 'password', label : 'Mot de passe', type : 'password'})
    @!component('components/input', {name : 'confirmPassword', label : 'Confirmez votre mot de passe', type : 'password'})

    <button type="submit" id="submit-btn">S'inscrire</button>
  </form>
  <script>
    const form = document.getElementById("registerForm");
    
    const submitButton = document.getElementById("submit-btn");
    
    const usernameInput = form.querySelector("input[name='username']");
    
    const passwordInput = form.querySelector("input[name='password']");
    
    const confirmPasswordInput = form.querySelector("input[name='confirmPassword']");
    
    const inputs = form.querySelectorAll("input");
    // Fonction pour vérifier les conditions
    
    function checkFields() {
      let usernameValid = usernameInput.value.trim() !== "";
      let passwordValid = passwordInput.value.length >= 8;
      let passwordsMatch = passwordInput.value === confirmPasswordInput.value;
      if (usernameValid && passwordValid && passwordsMatch) {
        submitButton.style.display = "inline-block";
      } else {
        submitButton.style.display = "none";
      }
    }
    // Vérification à chaque modification d'un champ
    
    inputs.forEach(input => {
      input.addEventListener("input", checkFields);
    });
    // Vérification initiale
    
    checkFields();
  </script>
@endcomponent
